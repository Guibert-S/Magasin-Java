import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;


public class FileDriver {
	
	 static String chemin = "C:/Users/samue/OneDrive/Bureau/Sauvegarde_Inventaire.txt"; // variable global  je sais si c'est opti ? 
	
	
	

	

		// FONCTIONS  DE LECTURE ET D'ECRITURE // 
		
	public static void afficherFichierSauvegarde(String chemin) { // chemin du fichier que l'on veut afficher //
		
		File file = new File(chemin);
		
		try {
			BufferedReader reader = new BufferedReader(new InputStreamReader(new FileInputStream(file),"UTF-8"));
			String line = reader.readLine();
			
			while(line!= null )
			{
				System.out.println(line);
				line = reader.readLine();  // permet d'incrémenter chaque ligne sinon on boucle sur la premiere// 
			}
			reader.close(); // fermer le fichier //
		}catch(IOException e) { // attraper l'exeption //
			e.printStackTrace(); 
		}
		}
	
	
public static void Sauvegarder(String chemin, Article article) { // chemin du fichier ou l'on veut écrire //
		
		File file = new File(chemin);
		
		try {
			FileWriter writer = new FileWriter(file,true); // argument True = surcharge constructeur qui permet de ne pas écraser les données existantes
			BufferedWriter bw =  new BufferedWriter(writer);
			bw.write("{("+article.getNom()+','+article.getDescription()+','+article.getPrixAchat()+','+article.getPrixVente()+','+article.getPromo()+','+article.getStock()+")}"); // on converti article en string car la fonction prend uniquement des strings
			bw.newLine();
			bw.close(); // fermer car sinon continue à lire le fichier //
		} catch(IOException e) { // attraper les exeptions
			e.printStackTrace(); 
			}
		
		}



	
	}
